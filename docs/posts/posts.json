[
  {
    "path": "posts/welcome/",
    "title": "Welcome to Blank Space",
    "description": "Welcome to our new blog, Blank Space. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Nora Jones",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2022-08-16",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-08-16T22:52:30-04:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-08-16-crear-una-pgina-con-distill/",
    "title": "Cómo hacer una página estática con distill",
    "description": "En este post veremos cómo crear(nos) una página\nestática utilizando el paquete distill.",
    "author": [
      {
        "name": "Soledad Araya",
        "url": "https://snaraya.github.io"
      }
    ],
    "date": "2022-08-16",
    "categories": [],
    "contents": "\ndistill\nLo primero que realizaremos esta vez es instalar el paquete que usaremos:\n\n\ninstall.packages(\"distill\")\n\n\nA diferencia de la mayoría de los paquetes, no lo cargaremos al ambiente de R, sólo usaremos algunas funciones.\nCon el paquete cargado, haremos un proyecto:\n\nIremos a “New Directory”:\n\nY haremos clic en “Distill Blog”. Nos pedirá poner un nombre a la carpeta, donde estará alojado y el título del blog.\n\nEl blog se creará de manera automática. Esto es lo que verán al momento de crearlo:\n\n¿Qué es cada documento?\n\n\nlibrary(knitr)\nlibrary(kableExtra)\n\nreadxl::read_excel(\"input/tablas.xlsx\", sheet = \"tablas_distill\") %>% \n  knitr::kable() %>% \n  kable_styling(bootstrap_options = c(\"striped\")) %>% \n  column_spec(1, width_min = \"3cm\", bold = T) %>% \n  column_spec(2, width_min = \"6cm\") \n\n\nDocumento\n\n\nDescripción\n\n\n_site.yml\n\n\nArchivo usado para la configuración del sitio web.\n\n\nindex.Rmd\n\n\nPágina de inicio del blog.\n\n\nabout.Rmd\n\n\nPágina que contiene la información acerca del autor o institución.\n\n\n_posts/welcome/welcome.Rmd\n\n\nPost de bienvenida al blog.\n\n\nPersonalizar el blog:\nHay muchas formas de personalizar el blog. Para empezar, podemos crear un tema:\n\n\ndistill::create_theme(\"theme\")\n\n\nEsto creará un archivo CSS en la carpeta. Pueden modificar a su gusto cómo lucirá su página. Cuando esté listo, sólo deben agregar theme: theme.css a su archivo _site.ylm:\n\nname: \"snaraya\"\ntitle: \"Blank Space\"\ntheme: theme.css\nnavbar:\n\nSi buscan personalizar su página, les dejo algunos links de interés:\nCrear un tema en distill.\nR Markdown Cookbook.\nPaquete pasa usar emojis en R Markdown.\nSi buscan personalizar la paleta de colores de su página y de los gráficos, les recomiendo esta página.\nPublicar nuestro blog:\nUsaremos GitHub Pages para lanzar nuestro blog. Hay distintas maneras de poner un blog hecho con R Markdown online, pero nosotros/as usaremos esta versión para ocupar la cuenta que hicimos la semana pasada.\nHay diferentes formas de llegar al mismo destino, probablemente esa es una de las fortalezas de R, pero cuando recién se está aprendiendo esto puede resultar abrumador. En mi caso, yo ya tenía creado un repositorio con el nombre de mi usuario (https://github.com/snaraya/snaraya). Para usar GitHub Pages es necesario que el nombre de la página sea el mismo que el nombre de usuario, esto quiere decir que tendremos que crear una repo con el mismo nombre de usuario.\nTenemos la repo en nuestra cuenta.\nPodemos abrir la repo con GitHub Desktop, esto nos creará automáticamente una carpeta local que tendrá un README.md. Podemos mover los archivos de nuestro proyecto directamente a esa carpeta.\n\nRecuerden que el archivo README.md puede ser utilizado para crear una tarjeta de bienvenida a su página de GitHub. En ella pueden resumir algunos de sus trabajos como ayudantes, asistentes de investigación, prácticas o pasantías. También, pueden poner el nivel de sus habilidades con R u otros lenguajes de programación, el nivel de inglés o de otros idiomas, su manejo de programas como QGIS, SPSS y Stata.\n\nIremos a Build que se encuentra en el panel superior derecho.\n\nEste paso nos dará una mirada global de la página que estamos creando. Si hay algún problema, lo más probable es que se pueda identificar en este momento. De esa manera, se puede eliminar el error antes de lanzar la página a la web.\nSi queremos hacerlo desde la consola, podemos poner:\n\n\nrmarkdown::render_site()\n\n\nCuando corran la página, ésta se abrirá en el Viewer\n\nDecidí dejar una pestaña para hacer un CV. Ustedes pueden crear tantas secciones como lo crean necesario para el desarrollo de sus proyectos.\n\nArchivo jekill\nGitHub Pages ocupa su propia interfaz al momento de lanzar una página web, por lo que debemos decirle a GitHub que no ocuparemos esa interfaz predeterminada, sino la que estamos desarrollando. Para eso, crearemos un archivo dentro de nuestra repo.\n\n\nfile.create(\".nojekyll\")\n\n\nEsto bastará para que nuestro sitio pueda lanzarse de manera exitosa.\nLanzamiento\nVan a GitHub Desktop y hacen el primer commit desde la carpeta local. Esto subirá los archivos en los que han estado trabajando a GitHub, y dentro de unos minutos podrán ver su página lista.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-08-17T00:17:10-04:00",
    "input_file": "crear-una-pgina-con-distill.knit.md"
  }
]
